{
  "name": "rigz",
  "rules": {
    "program": {
      "type": "REPEAT1",
      "content": {
        "type": "SYMBOL",
        "name": "statement"
      }
    },
    "statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "expression"
            },
            {
              "type": "SYMBOL",
              "name": "function_definition"
            },
            {
              "type": "SYMBOL",
              "name": "assignment"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ";"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "function_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "lifecycle"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "fn"
        },
        {
          "type": "SYMBOL",
          "name": "function_identifier"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "("
                    },
                    {
                      "type": "SYMBOL",
                      "name": "function_arg"
                    },
                    {
                      "type": "REPEAT",
                      "content": {
                        "type": "SEQ",
                        "members": [
                          {
                            "type": "STRING",
                            "value": ","
                          },
                          {
                            "type": "SYMBOL",
                            "name": "function_arg"
                          }
                        ]
                      }
                    },
                    {
                      "type": "CHOICE",
                      "members": [
                        {
                          "type": "STRING",
                          "value": ","
                        },
                        {
                          "type": "BLANK"
                        }
                      ]
                    },
                    {
                      "type": "STRING",
                      "value": ")"
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": ":"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "type"
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "program"
        },
        {
          "type": "STRING",
          "value": "end"
        }
      ]
    },
    "function_arg": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": ":"
                },
                {
                  "type": "SYMBOL",
                  "name": "type"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "function_call"
            },
            {
              "type": "SYMBOL",
              "name": "value"
            },
            {
              "type": "SYMBOL",
              "name": "binary"
            },
            {
              "type": "SYMBOL",
              "name": "unary"
            },
            {
              "type": "SYMBOL",
              "name": "if_else"
            },
            {
              "type": "SYMBOL",
              "name": "unless"
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "("
                },
                {
                  "type": "SYMBOL",
                  "name": "expression"
                },
                {
                  "type": "STRING",
                  "value": ")"
                }
              ]
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "cast"
                },
                {
                  "type": "SYMBOL",
                  "name": "trailing_if"
                },
                {
                  "type": "SYMBOL",
                  "name": "trailing_unless"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "trailing_if": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "trailing_unless": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "unless"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "if_else": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "program"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "else"
                },
                {
                  "type": "SYMBOL",
                  "name": "program"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "end"
        }
      ]
    },
    "unless": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "unless"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "program"
        },
        {
          "type": "STRING",
          "value": "end"
        }
      ]
    },
    "cast": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "as"
        },
        {
          "type": "SYMBOL",
          "name": "type"
        }
      ]
    },
    "unary": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "-"
            },
            {
              "type": "STRING",
              "value": "!"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "binary": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "+"
            },
            {
              "type": "STRING",
              "value": "-"
            },
            {
              "type": "STRING",
              "value": "*"
            },
            {
              "type": "STRING",
              "value": "/"
            },
            {
              "type": "STRING",
              "value": "%"
            },
            {
              "type": "STRING",
              "value": "^"
            },
            {
              "type": "STRING",
              "value": "|"
            },
            {
              "type": "STRING",
              "value": "||"
            },
            {
              "type": "STRING",
              "value": "&"
            },
            {
              "type": "STRING",
              "value": "&&"
            },
            {
              "type": "STRING",
              "value": ">>"
            },
            {
              "type": "STRING",
              "value": "<<"
            },
            {
              "type": "STRING",
              "value": "<="
            },
            {
              "type": "STRING",
              "value": "<"
            },
            {
              "type": "STRING",
              "value": ">"
            },
            {
              "type": "STRING",
              "value": ">="
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "symbol": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "PATTERN",
          "value": "\\w+"
        }
      ]
    },
    "assignment": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "let"
            },
            {
              "type": "STRING",
              "value": "mut"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "function_call": {
      "type": "PREC",
      "value": 3,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "function_identifier"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "expression"
                  },
                  {
                    "type": "REPEAT",
                    "content": {
                      "type": "SEQ",
                      "members": [
                        {
                          "type": "STRING",
                          "value": ","
                        },
                        {
                          "type": "SYMBOL",
                          "name": "expression"
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "none": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "none"
      }
    },
    "value": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "none"
        },
        {
          "type": "SYMBOL",
          "name": "bool"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "list"
        },
        {
          "type": "SYMBOL",
          "name": "map"
        },
        {
          "type": "SYMBOL",
          "name": "error"
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        }
      ]
    },
    "scope": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "lifecycle"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "do"
        },
        {
          "type": "SYMBOL",
          "name": "program"
        },
        {
          "type": "STRING",
          "value": "end"
        }
      ]
    },
    "lifecycle": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "error": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "error"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "bool": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+(.\\d+)?"
    },
    "string": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_single_quoted_string"
        },
        {
          "type": "SYMBOL",
          "name": "_double_quoted_string"
        },
        {
          "type": "SYMBOL",
          "name": "_backtick_string"
        }
      ]
    },
    "_single_quoted_string": {
      "type": "PATTERN",
      "value": "'([^'\\\\]|\\\\[\\s\\S])*'"
    },
    "_double_quoted_string": {
      "type": "PATTERN",
      "value": "\"([^\"\\\\]|\\\\[\\s\\S])*\""
    },
    "_backtick_string": {
      "type": "PATTERN",
      "value": "`([^`\\\\]|\\\\[\\s\\S])*`"
    },
    "map": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "SYMBOL",
          "name": "_attribute"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "_attribute"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "type_object": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "STRING",
              "value": "="
            },
            {
              "type": "SYMBOL",
              "name": "type"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "identifier"
                  },
                  {
                    "type": "STRING",
                    "value": "="
                  },
                  {
                    "type": "SYMBOL",
                    "name": "type"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "type_identifier": {
      "type": "PATTERN",
      "value": "[A-Z]\\w+"
    },
    "type_definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "type"
            },
            {
              "type": "SYMBOL",
              "name": "type_identifier"
            },
            {
              "type": "STRING",
              "value": "="
            },
            {
              "type": "SYMBOL",
              "name": "type_object"
            }
          ]
        }
      ]
    },
    "_attribute": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "STRING",
                "value": "="
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "None"
        },
        {
          "type": "STRING",
          "value": "Any"
        },
        {
          "type": "STRING",
          "value": "Float"
        },
        {
          "type": "STRING",
          "value": "Int"
        },
        {
          "type": "STRING",
          "value": "Uint"
        },
        {
          "type": "STRING",
          "value": "String"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "["
            },
            {
              "type": "SYMBOL",
              "name": "type"
            },
            {
              "type": "STRING",
              "value": "]"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "{"
            },
            {
              "type": "SYMBOL",
              "name": "type"
            },
            {
              "type": "STRING",
              "value": "}"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "{"
            },
            {
              "type": "SYMBOL",
              "name": "type"
            },
            {
              "type": "SYMBOL",
              "name": "type"
            },
            {
              "type": "STRING",
              "value": "}"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "Error"
        }
      ]
    },
    "list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "SYMBOL",
          "name": "value"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "value"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "\\w+"
    },
    "function_identifier": {
      "type": "PATTERN",
      "value": "[$\\w][\\w.]*"
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "#"
              },
              {
                "type": "PATTERN",
                "value": ".*"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "/*"
              },
              {
                "type": "PATTERN",
                "value": "[^*]*\\*+([^/*][^*]*\\*+)*"
              },
              {
                "type": "STRING",
                "value": "/"
              }
            ]
          }
        ]
      }
    },
    "_whitespace": {
      "type": "PATTERN",
      "value": "[\\s\\uFEFF\\u2060\\u200B\\u00A0]+"
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "comment"
    },
    {
      "type": "SYMBOL",
      "name": "_whitespace"
    }
  ],
  "conflicts": [
    [
      "function_call"
    ],
    [
      "statement",
      "binary"
    ],
    [
      "unary",
      "binary"
    ],
    [
      "binary"
    ],
    [
      "expression"
    ],
    [
      "binary",
      "assignment"
    ],
    [
      "binary",
      "function_call"
    ],
    [
      "trailing_if",
      "binary"
    ],
    [
      "trailing_unless",
      "binary"
    ]
  ],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
