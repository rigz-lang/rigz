[package]
name = "rigz_runtime"
version = "0.6.0"
edition = "2021"
description = "Handles parsing and converting rigz to its VM instructions (for syntax highlighting use tree-sitter-rigz instead)"
readme = "README.md"
license = "MIT"
repository = "https://gitlab.com/inapinch/rigz/crates/runtime"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["rigz_vm/threaded"]
js = ["rigz_vm/js", "dep:getrandom", "dep:web-sys", "dep:ring", "dep:rustls-pki-types", "uuid/js", "chrono/js-sys"]
std_capture = ["rigz_vm/std_capture"]

[dependencies]
chrono = { version = "0.4", features = ["serde"] }
derivative = "2.2.0"
getrandom = { version = "0.3.3", optional = true, features = ["wasm_js"]}
rand_chacha = "0.9.0"
rigz_core.workspace = true
rigz_ast.workspace = true
rigz_ast_derive.workspace = true
rigz_vm.workspace = true
itertools.workspace = true
log.workspace = true
ring = { version = "0.17", optional = true, features = ["wasm32_unknown_unknown_js"]}
rustls-pki-types = { version = "1.12.0", optional = true, features = ["web"]}
scraper = "0.23.1"
serde.workspace = true
serde_json.workspace = true
typetag.workspace = true
ureq = "2.12.1"
uuid = { version = "1.18.0", features = ["v1", "v3", "v4", "v5", "v6", "v7", "v8", "serde"] }
rand.workspace = true
web-sys = { workspace = true, optional = true }

[dev-dependencies]
pretty_env_logger = "0.5.0"
wasm-bindgen-test = "0.3"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
criterion = { version = "0.6", features = ["html_reports"] }

[[bench]]
name = "eval_benchmarks"
harness = false

[[bench]]
name = "eval_defaults_benchmarks"
harness = false