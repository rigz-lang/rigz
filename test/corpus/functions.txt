==================
Define Function
==================
fn add(a, b)
  a + b
end
---
(program
    (statement
        (function_definition
            (function_identifier (identifier))
            (function_arg
                (identifier)
            )
            (function_arg
                (identifier)
            )
            (scope
            (program
                (statement
                    (expression
                        (binary
                            (expression
                                (function_call
                                    (function_identifier (identifier))
                                )
                            )
                            (expression
                                (function_call
                                    (function_identifier (identifier))
                                )
                            )
                        )
                    )
                )
            ))
        )
    )
)

==================
Call Multiple
==================
puts puts 42
---
(program
    (statement
        (expression
            (function_call
                (function_identifier (identifier))
                (expression
                    (function_call
                        (function_identifier (identifier))
                        (expression
                            (value
                                (number)
                            )))
                    )
            )
        )
    )
)

==================
Call Multiple (parens)
==================
puts(puts 42, 43, 24), 54
---
(program
    (statement
        (expression
            (function_call
                (function_identifier  (identifier))
                (expression
                    (expression
                        (function_call
                            (function_identifier  (identifier))
                            (expression
                                (value
                                    (number)
                                )
                            )
                            (expression
                                (value
                                    (number)
                                )
                            )
                            (expression
                                (value
                                    (number)
                                )
                            )
                        )
                    )
                )
                (expression
                  (value
                    (number)
                  )
                )
            )
        )
    )
)